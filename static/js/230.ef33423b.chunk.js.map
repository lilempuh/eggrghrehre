{"version":3,"file":"static/js/230.ef33423b.chunk.js","mappings":"2OAEaA,EAAQC,EAAAA,EAAAA,MAAH,sFAMLC,EAAcD,EAAAA,EAAAA,MAAH,0ICAxB,EAL0B,CACxBE,YAJkB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,UAK1CC,UAJgB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,S,8BC4B1C,EAvBe,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,WAMrC,OACE,UAACV,EAAD,oCAEE,SAACF,EAAD,CACEa,KAAK,OACLC,MAAOJ,EACPK,KAAK,SACLC,SAXwB,SAAAC,GAC5BT,GAASU,EAAAA,EAAAA,GAAaD,EAAEE,cAAcL,SAWlCM,QAAQ,yHACRC,MAAM,+ICrBDC,EAAiBrB,EAAAA,EAAAA,GAAH,wJASdsB,EAAUtB,EAAAA,EAAAA,IAAH,wOAYPuB,EAASvB,EAAAA,EAAAA,OAAH,6K,SCdJ,SAASwB,IACtB,IAAMpB,GAAWM,EAAAA,EAAAA,IAAYC,EAAAA,aACvBL,GAASI,EAAAA,EAAAA,IAAYC,EAAAA,WACrBJ,GAAWC,EAAAA,EAAAA,OAEjBiB,EAAAA,EAAAA,YAAU,WACRlB,EAASmB,EAAAA,EAAAA,mBACR,CAACnB,IAEJ,IAQMoB,EARuB,WAC3B,IAAMC,EAAmBtB,EAAOuB,cAEhC,OAAOzB,EAASE,QAAO,SAAAwB,GAAO,OAC5BA,EAAQhB,KAAKe,cAAcE,SAASH,MAIdI,GAO1B,OADAC,QAAQC,IAAIP,IAEV,SAACL,EAAD,WACE,wBACGK,EAAkBQ,KAAI,SAAAL,GACrB,OACE,UAACT,EAAD,CAAiCS,QAASA,EAA1C,UACGA,EAAQhB,KADX,MACoBgB,EAAQM,QAC1B,SAACb,EAAD,CAAQc,QAAS,kBAZLC,EAY2BR,EAAQQ,QAXzD/B,EAASmB,EAAAA,EAAAA,cAAiCY,IADpB,IAAAA,GAYZ,qBAFmBR,EAAQQ,WCrClC,IAAMC,EAAQvC,EAAAA,EAAAA,KAAH,yOAYLD,EAAQC,EAAAA,EAAAA,MAAH,qEAKLuB,EAASvB,EAAAA,EAAAA,OAAH,6KCZJ,SAASwC,IACtB,IAAMjC,GAAWC,EAAAA,EAAAA,MACXJ,GAAWM,EAAAA,EAAAA,IAAYC,EAAAA,aAwB7B,OACE,UAAC4B,EAAD,CAAOE,SAvBY,SAAAzB,GACnBA,EAAE0B,iBAEF,IAAMC,EAAO3B,EAAE4B,OAAOC,SAItB,GAHoBzC,EAAS0C,MAC3B,SAAAhB,GAAO,OAAIA,EAAQhB,KAAKe,gBAAkBc,EAAK7B,KAAKD,MAAMgB,iBAG1DkB,MAAM,GAAD,OAAIJ,EAAK7B,KAAKD,MAAd,gCADP,CAKA,IAAMmC,EAAa,CACjBlC,KAAM6B,EAAK7B,KAAKD,MAChBuB,OAAQO,EAAKP,OAAOvB,OAGtBN,EAASmB,EAAAA,EAAAA,WAA8BsB,IACvCL,EAAK7B,KAAKD,MAAQ,GAClB8B,EAAKP,OAAOvB,MAAQ,KAIpB,WACE,iCACA,SAAC,EAAD,CACED,KAAK,OACLE,KAAK,OACLK,QAAQ,yHACRC,MAAM,yIACN6B,UAAQ,KAGV,mCACA,SAAC,EAAD,CACErC,KAAK,MACLE,KAAK,SACLK,QAAQ,yFACRC,MAAM,+FACN6B,UAAQ,KAGV,SAAC,EAAD,CAAQrC,KAAK,SAAb,4B,kBClDOsC,EAAQlD,EAAAA,EAAAA,GAAH,4GCALmD,EAAUnD,EAAAA,EAAAA,QAAH,mMCKL,SAASoD,IACtB,OACE,UAACC,EAAA,EAAD,YACE,SAACH,EAAD,yBACA,UAACC,EAAD,YACE,SAACX,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD","sources":["components/Filter/Filter.styled.jsx","redux/contact/contacts-selectors.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/ContactsPage/ContactsPage.styled.jsx","components/Section/Section.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 4px;\n`;\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 300px;\n  font-size: 20px;\n`;\n","const getContacts = state => state.contacts.contacts;\nconst getFilter = state => state.contacts.filter;\n\nconst contactsSelectors = {\n  getContacts,\n  getFilter,\n};\n\nexport default contactsSelectors;\n","import React from 'react';\nimport { LabelStyled, Input } from './Filter.styled';\nimport contactsSelectors from '../../redux/contact/contacts-selectors';\nimport { changeFilter } from '../../redux/contact/contact-slice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterSearchWord = useSelector(contactsSelectors.getFilter);\n\n  const changeFilterSearhWord = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <LabelStyled>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        value={filterSearchWord}\n        name=\"filter\"\n        onChange={changeFilterSearhWord}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </LabelStyled>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Contactelement = styled.li`\n  font-size: 20px;\n  padding: 10px;\n  border-bottom: 1px solid black;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  font-size: 22px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding: 40px;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  border: 2px solid #ececec;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  font-size: 18px;\n  border-radius: 5px;\n  padding: 5px;\n  cursor: pointer;\n  border: none;\n  background-color: #808080;\n`;\n","import React from 'react';\nimport { Contactelement, Button, Wrapper } from './ContactList.styled';\nimport contactsSelectors from '../../redux/contact/contacts-selectors';\nimport contactsOperations from '../../redux/contact/contacts-operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n// import Form from 'components/Form/Form';\n// import Filter from '../Filter/Filter';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const changeFilterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filterListContact = changeFilterContacts();\n\n  const getDeletContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  console.log(filterListContact);\n  return (\n    <Wrapper>\n      <ul>\n        {filterListContact.map(contact => {\n          return (\n            <Contactelement key={contact.id} contact={contact}>\n              {contact.name} : {contact.number}\n              <Button onClick={() => getDeletContact(contact.id)}>Delet</Button>\n            </Contactelement>\n          );\n        })}\n      </ul>\n    </Wrapper>\n  );\n}\n","import styled from '@emotion/styled';\nexport const Forma = styled.form`\n  font-size: 22px;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding: 40px;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  border: 2px solid #ececec;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const Button = styled.button`\n  font-size: 18px;\n  border-radius: 5px;\n  padding: 10px;\n  cursor: pointer;\n  border: none;\n  background-color: #ff00ff;\n  font-weight: 700;\n`;\n","// import { useState } from 'react';\nimport { Forma, Input, Button } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsSelectors from '../../redux/contact/contacts-selectors';\nimport contactsOperations from '../../redux/contact/contacts-operations';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target.elements;\n    const addContacts = contacts.find(\n      contact => contact.name.toLowerCase() === form.name.value.toLowerCase()\n    );\n    if (addContacts) {\n      alert(`${form.name.value} is already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      name: form.name.value,\n      number: form.number.value,\n    };\n\n    dispatch(contactsOperations.addContact(newContact));\n    form.name.value = '';\n    form.number.value = '';\n  };\n\n  return (\n    <Forma onSubmit={handleSubmit}>\n      <p>Name</p>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <p>Number</p>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button type=\"submit\">Add Contact</Button>\n    </Forma>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 10px;\n  width: 100%;\n`;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  width: 500px;\n  height: auto;\n  display: block;\n  margin: 15px auto;\n  border-radius: 8px;\n  box-shadow: 14px 23px 30px 7px rgba(0, 0, 0, 0.57);\n  padding: 30px;\n`;\n","import Filter from '../../components/Filter/Filter';\nimport ContactsList from '../../components/ContactList/ContactList';\nimport Form from '../../components/Form/Form';\nimport { Container } from 'components/Container/Container';\nimport { Title } from './ContactsPage.styled';\nimport { Section } from 'components/Section/Section.styled';\n\nexport default function ContactsPage() {\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <Section>\n        <Form />\n        <Filter />\n        <ContactsList />\n      </Section>\n    </Container>\n  );\n}\n"],"names":["Input","styled","LabelStyled","getContacts","state","contacts","getFilter","filter","dispatch","useDispatch","filterSearchWord","useSelector","contactsSelectors","type","value","name","onChange","e","changeFilter","currentTarget","pattern","title","Contactelement","Wrapper","Button","ContactList","useEffect","contactsOperations","filterListContact","normalizedFilter","toLowerCase","contact","includes","changeFilterContacts","console","log","map","number","onClick","id","Forma","Form","onSubmit","preventDefault","form","target","elements","find","alert","newContact","required","Title","Section","ContactsPage","Container"],"sourceRoot":""}